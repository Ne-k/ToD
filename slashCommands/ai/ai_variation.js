const {ApplicationCommandType, EmbedBuilder, ButtonBuilder, ActionRowBuilder} = require("discord.js");
const { Configuration, OpenAIApi } = require("openai");
const fs = require('fs');
const download = require('image-downloader');
const fetch = require('cross-fetch')
require('@colors/colors')

module.exports = {
    name: 'ai_variation',
    description: "Get a variation of a picture you upload by using OpenAI",
    type: ApplicationCommandType.ChatInput,
    category: "ai",
    cooldown: 5000,
    options: [
        {
            name: "image",
            description: "The picture you want the ai to get a finish/variation of",
            type: 11,
            required: true
        }
    ],
    run: async (client, interaction) => {
        interaction.reply({
            content: "Generating. . ."
        })
        const attachment = interaction.options.get("image").attachment;
        let fileName = "";

       const imageRegex = /(http(s?):)([/|.|\w|\s|-])*\.(?:png)/i;
        if (!imageRegex.test(attachment.url)) {
            return interaction.channel.send({
                embeds: [
                    new EmbedBuilder()
                        .setTitle("Error!")
                        .setDescription("The attachment you provided is not a image! We currently only support `.png` image files!")
                        .setColor("Red")
                        .setFooter({text: `Requested by ${interaction.user.tag}`})
                ]
            });
        }



        const configuration = new Configuration({
            apiKey: process.env.OPENAIKEY,
        });
        const openai = new OpenAIApi(configuration);

        download.image({
            url: attachment.url,
            dest: '../../temp',
            extractFilename: true
        })
            .then(async ({filename, image}) => {
                fileName = filename;
                const data = await openai.createImageVariation(
                    fs.createReadStream(filename),
                    2,
                    "1024x1024"
                );


                const urlButton1 = new ButtonBuilder()
                    .setLabel('Click here to see the first image')
                    .setStyle(5)
                    .setURL(data.data.data[0].url);
                const urlButton2 = new ButtonBuilder()
                    .setLabel('Click here to see the second image')
                    .setStyle(5)
                    .setURL(data.data.data[1].url);
                const row = new ActionRowBuilder()
                    .addComponents(urlButton1, urlButton2);

                // create file buffer for both of the images
                const buffer1 = await fetch(data.data.data[0].url).then(res => res.buffer());
                const buffer2 = await fetch(data.data.data[1].url).then(res => res.buffer());

                await interaction.deleteReply()

                return interaction.channel.send({
                    content: `Here is a image generated by OpenAI based on your image **${interaction.user.tag}**`,
                    files: [
                        {
                            name: 'image1.png',
                            attachment: buffer1
                        },
                        {
                            name: 'image2.png',
                            attachment: buffer2
                        }
                    ],
                    components: [row]
                }).then(() => {
                    fs.unlink(fileName, (err) => {
                        if (err) {
                            console.log(err);
                        }
                    })
                })
            }).catch((err) => {
                if(err.response) {
                    console.log("[OpenAI Var Error] ".red + err.response.data.error.message)
                    return interaction.channel.send({
                        embeds: [
                            new EmbedBuilder()
                                .setTitle("Error!")
                                .setDescription(`${err.response.data.error.message}\n\nCouple reasons why you got this error:\n- We currently only support images with a size of 1024x1024, you can use tools like [convert-my-image.com](https://convert-my-image.com/ImageConverter) to resize the image to 1024x1024\n- Your image file size is greater than 4 MB which is the max file size a image can be, you can try to compress the image using tools online.`)
                                .setColor("Red")
                                .setFooter({text: `Requested by ${interaction.user.tag}`})
                        ]
                    })
                } else {
                    return interaction.channel.send({
                        embeds: [
                            new EmbedBuilder()
                                .setTitle("Error!")
                                .setDescription(`An error occurred while generating the image. Please try again later`)
                                .setColor("Red")
                                .setFooter({text: `Requested by ${interaction.user.tag}`})
                        ]
                    })
                }
        })


    }
}